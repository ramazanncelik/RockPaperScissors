{"ast":null,"code":"var _jsxFileName = \"D:\\\\JavaScript\\\\ReactProjects\\\\rockpaperscissors\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Game from './Components/Game';\nimport Header from './Components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [score, setScore] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-screen grid bg-slate-800 p-2  justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dhwb4Jf0iOwsc3rUivvi1/f596M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Game","Header","App","score","setScore"],"sources":["D:/JavaScript/ReactProjects/rockpaperscissors/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Game from './Components/Game';\nimport Header from './Components/Header'\n\nfunction App() {\n\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className='w-full h-screen grid bg-slate-800 p-2  justify-center'>\n\n      <Header score={score} />\n\n      <Game score={score} />\n\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAExC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACE;IAAK,SAAS,EAAC,uDAAuD;IAAA,wBAEpE,QAAC,MAAM;MAAC,KAAK,EAAEI;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAExB,QAAC,IAAI;MAAC,KAAK,EAAEA;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAElB;AAEV;AAAC,GAbQD,GAAG;AAAA,KAAHA,GAAG;AAeZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}